/* 
  This file contains "item" related functions

  Note: An "item object" is a generic object with the following properties:
    id, title, price, image_url
*/

const db = require('./db');

// Insert a new item to table "item".
// If item.id is not specified, item.id is assigned an item ID generated by the DB.
// This function returns the item ID of the inserted item.
async function create(item) {
  let sql = `INSERT INTO items (item_id, title, price, image_url) VALUES (?, ?, ?, ?)`;
  let data = [item.id, item.title, item.price, item.image_url];

  let result = await db.query(sql, data);

  // Note: "insertId" is the item_id assigned by DB

  if (item.id === undefined || item.id === null)
    item.id = result.insertId;

  return result.insertId;
}

// Returns an item object with the specified item ID, or 
// returns null if the item with the specified item ID does not exist.
async function findById(itemId) {
  let sql = `SELECT item_id AS id, title, price, image_url FROM items WHERE item_id=?`;
  data = [ itemId ];

  let results = await db.query(sql, data);
  if (results.length == 0)
    return null;
  else {
   let { id, title, price, image_url } = results[0];
   return { id, title, price, image_url };
  }
}

// Update an item
async function update(item) {
  let sql = `UPDATE items SET title=?, price=?, image_url=? WHERE item_id=?`;
  let data = [ item.title, item.price, item.image_url, item.id ];

  let result = await db.query(sql, data);
  return result.affectedRows;
}

// Return all items as an array of item objects
async function getAll() {
  let sql = `SELECT item_id AS id, title, price FROM items`;
 
  let results = await db.query(sql); 
  return results;
}

// Delete the item with the specified item ID.
async function remove(itemId) {
  let sql = `DELETE FROM items WHERE item_id=?`;
  let data = [ itemId ];
  
  let result = await db.query(sql, data);
  return result.affectedRows;
}

module.exports = {
  create,
  findById,
  update,
  getAll,
  remove
};
